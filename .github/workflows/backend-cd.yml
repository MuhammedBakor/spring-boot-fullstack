name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: moody
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4
      - name: Slack Commit message and sha
        run: >
          curl -X POST -H "Content-type: application/json"
          --data '{"text": "github: https://github.com/MuhammedBakor/spring-boot-fullstack/commits/${{github.sha}} - ${{github.event.head.commit.message}}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message - Triggered
        run: >
          curl -X POST -H "Content-type: application/json"
          --data "{\"text\":\":rocket: New push detected. Commit: <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}> - ${{ github.event.head_commit.message }}\"}"
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Send Slack Message - Build Started
        run: >
          curl -X POST -H "Content-type: application/json"
          --data "{\"text\":\":maven: Starting Maven Build...\"}"
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Build & Push Docker Image with Maven Jib
        run: mvn -ntp -B verify -Dimage=muhammedbakur/customer-management-api:${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build


      - name: Send Slack Message - Image Pushed
        run: >
          curl -X POST -H "Content-type: application/json"
          --data "{\"text\":\":docker: Docker image *${{ steps.build-number.outputs.BUILD_NUMBER }}* pushed to Docker Hub âœ…\"}"
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

      - name: Send Slack Message - Deployed
        run: >
          curl -X POST -H "Content-type: application/json"
          --data "{\"text\":\":white_check_mark: Deployment to *Render* completed successfully!\"}"
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message - Job Status
        if: always()
        run: >
          curl -X POST -H "Content-type: application/json"
          --data "{\"text\":\":clipboard: Final Job Status: *${{ job.status }}*\"}"
          ${{ secrets.SLACK_WEBHOOK_URL }}
