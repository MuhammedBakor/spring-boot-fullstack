services:
  db:
    container_name: mypostgres
    image: postgres:latest
    environment:
      POSTGRES_USER: moody
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

    #instead fo
    #  docker run --name con-customer-api --rm -p 8080:8080 --network spring-boot-fullstack_postgres muhammedbakur/customer-management-api:latest --spring.datasource.url=jdbc:postgresql://db:5432/customer
  customer-api:
    container_name: con-customer-api
    image: muhammedbakur/customer-management-api:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/customer
    ports:
      - "8088:8080"
    networks:
      - postgres
    depends_on:
      - db
    restart: unless-stopped
    #command:
     # - --spring.datasource.url=jdbc:postgresql://db:5432/customer


  customer-frontend-react:
    container_name: customer-react
    image: muhammedbakur/customer-management-react
    build:
      context: frontend/react
      args:
        api_base_url: http://localhost:8088
    ports:
      - "3000:5173"
    depends_on:
      - customer-api
    restart: unless-stopped


networks:
  postgres:
    driver: bridge

volumes:
  postgres:


